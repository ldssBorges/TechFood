// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechFood.Infra.Data.Contexts;


#nullable disable

namespace TechFood.Infrastructure.Data.Migrations
{
    [DbContext(typeof(TechFoodContext))]
    partial class TechFoodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechFood.Common.DTO.CategoryDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("eaa76b46-2e6b-42eb-8f5d-b213f85f25ea"),
                            ImageFileName = "lanche.png",
                            IsDeleted = false,
                            Name = "Lanche",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = new Guid("c65e2cec-bd44-446d-8ed3-a7045cd4876a"),
                            ImageFileName = "acompanhamento.png",
                            IsDeleted = false,
                            Name = "Acompanhamento",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = new Guid("c3a70938-9e88-437d-a801-c166d2716341"),
                            ImageFileName = "bebida.png",
                            IsDeleted = false,
                            Name = "Bebida",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = new Guid("ec2fb26d-99a4-4eab-aa5c-7dd18d88a025"),
                            ImageFileName = "sobremesa.png",
                            IsDeleted = false,
                            Name = "Sobremesa",
                            SortOrder = 3
                        });
                });

            modelBuilder.Entity("TechFood.Common.DTO.CustomerDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("25b58f54-63bc-42da-8cf6-8162097e72c8"),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9887b301-605f-46a6-93db-ac1ce8685723"),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("TechFood.Common.Entities.OrderDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1b5f3a2-4c8e-4b7c-9f0e-5a2d6f3b8c1e"),
                            Amount = 39.97m,
                            CreatedAt = new DateTime(2025, 5, 13, 22, 2, 36, 0, DateTimeKind.Utc).AddTicks(6053),
                            CustomerId = new Guid("25b58f54-63bc-42da-8cf6-8162097e72c8"),
                            Discount = 0m,
                            IsDeleted = false,
                            Status = 5
                        },
                        new
                        {
                            Id = new Guid("f2b5f3a2-4c8e-4b7c-9f0e-5a2d6f3b8c1e"),
                            Amount = 26.98m,
                            CreatedAt = new DateTime(2025, 5, 13, 22, 2, 36, 0, DateTimeKind.Utc).AddTicks(6354),
                            CustomerId = new Guid("9887b301-605f-46a6-93db-ac1ce8685723"),
                            Discount = 0m,
                            IsDeleted = false,
                            Status = 4
                        });
                });

            modelBuilder.Entity("TechFood.Common.Entities.OrderHistoryDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderHistory", (string)null);
                });

            modelBuilder.Entity("TechFood.Common.Entities.OrderItemDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductDTOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductDTOId");

                    b.ToTable("OrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea31fb90-4bc3-418f-95fc-56516d5bc634"),
                            IsDeleted = false,
                            OrderId = new Guid("d1b5f3a2-4c8e-4b7c-9f0e-5a2d6f3b8c1e"),
                            ProductId = new Guid("090d8eb0-f514-4248-8512-cf0d61a262f0"),
                            Quantity = 1,
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            Id = new Guid("b0f1c3a2-4c8e-4b7c-9f0e-5a2d6f3b8c1e"),
                            IsDeleted = false,
                            OrderId = new Guid("d1b5f3a2-4c8e-4b7c-9f0e-5a2d6f3b8c1e"),
                            ProductId = new Guid("55f32e65-c82f-4a10-981c-cdb7b0d2715a"),
                            Quantity = 2,
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            Id = new Guid("82e5700b-c33e-40a6-bb68-7279f0509421"),
                            IsDeleted = false,
                            OrderId = new Guid("f2b5f3a2-4c8e-4b7c-9f0e-5a2d6f3b8c1e"),
                            ProductId = new Guid("a62dc225-416a-4e36-ba35-a2bd2bbb80f7"),
                            Quantity = 1,
                            UnitPrice = 21.99m
                        },
                        new
                        {
                            Id = new Guid("900f65fe-47ca-4b4b-9a7c-a82c6d9c52cd"),
                            IsDeleted = false,
                            OrderId = new Guid("f2b5f3a2-4c8e-4b7c-9f0e-5a2d6f3b8c1e"),
                            ProductId = new Guid("86c50c81-c46e-4e79-a591-3b68c75cefda"),
                            Quantity = 1,
                            UnitPrice = 4.99m
                        });
                });

            modelBuilder.Entity("TechFood.Common.Entities.PaymentDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("TechFood.Common.Entities.PreparationDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Preparation", (string)null);
                });

            modelBuilder.Entity("TechFood.Common.Entities.ProductDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryDTOId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("OutOfStock")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryDTOId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("090d8eb0-f514-4248-8512-cf0d61a262f0"),
                            CategoryDTOId = new Guid("eaa76b46-2e6b-42eb-8f5d-b213f85f25ea"),
                            Description = "Delicioso X-Burguer",
                            ImageFileName = "x-burguer.png",
                            IsDeleted = false,
                            Name = "X-Burguer",
                            OutOfStock = false,
                            Price = 19.99m
                        },
                        new
                        {
                            Id = new Guid("a62dc225-416a-4e36-ba35-a2bd2bbb80f7"),
                            CategoryDTOId = new Guid("eaa76b46-2e6b-42eb-8f5d-b213f85f25ea"),
                            Description = "Delicioso X-Salada",
                            ImageFileName = "x-salada.png",
                            IsDeleted = false,
                            Name = "X-Salada",
                            OutOfStock = false,
                            Price = 21.99m
                        },
                        new
                        {
                            Id = new Guid("3c9374f1-58e9-4b07-bdf6-73aa2f4757ff"),
                            CategoryDTOId = new Guid("eaa76b46-2e6b-42eb-8f5d-b213f85f25ea"),
                            Description = "Delicioso X-Bacon",
                            ImageFileName = "x-bacon.png",
                            IsDeleted = false,
                            Name = "X-Bacon",
                            OutOfStock = false,
                            Price = 22.99m
                        },
                        new
                        {
                            Id = new Guid("55f32e65-c82f-4a10-981c-cdb7b0d2715a"),
                            CategoryDTOId = new Guid("c65e2cec-bd44-446d-8ed3-a7045cd4876a"),
                            Description = "Crocante Batata Frita",
                            ImageFileName = "batata.png",
                            IsDeleted = false,
                            Name = "Batata Frita",
                            OutOfStock = false,
                            Price = 9.99m
                        },
                        new
                        {
                            Id = new Guid("3249b4e4-11e5-41d9-9d55-e9b1d59bfb23"),
                            CategoryDTOId = new Guid("c65e2cec-bd44-446d-8ed3-a7045cd4876a"),
                            Description = "Crocante Batata Frita",
                            ImageFileName = "batata-grande.png",
                            IsDeleted = false,
                            Name = "Batata Frita Grande",
                            OutOfStock = false,
                            Price = 12.99m
                        },
                        new
                        {
                            Id = new Guid("4aeb3ad6-1e06-418e-8878-e66a4ba9337f"),
                            CategoryDTOId = new Guid("c65e2cec-bd44-446d-8ed3-a7045cd4876a"),
                            Description = "Delicioso Nuggets de Frango",
                            ImageFileName = "nuggets.png",
                            IsDeleted = false,
                            Name = "Nuggets de Frango",
                            OutOfStock = false,
                            Price = 13.99m
                        },
                        new
                        {
                            Id = new Guid("86c50c81-c46e-4e79-a591-3b68c75cefda"),
                            CategoryDTOId = new Guid("c3a70938-9e88-437d-a801-c166d2716341"),
                            Description = "Coca-Cola",
                            ImageFileName = "coca-cola.png",
                            IsDeleted = false,
                            Name = "Coca-Cola",
                            OutOfStock = false,
                            Price = 4.99m
                        },
                        new
                        {
                            Id = new Guid("44c61027-8e16-444d-9f4f-e332410cccaa"),
                            CategoryDTOId = new Guid("c3a70938-9e88-437d-a801-c166d2716341"),
                            Description = "Guaraná",
                            ImageFileName = "guarana.png",
                            IsDeleted = false,
                            Name = "Guaraná",
                            OutOfStock = false,
                            Price = 4.99m
                        },
                        new
                        {
                            Id = new Guid("bf90f247-52cc-4bbb-b6e3-9c77b6ff546f"),
                            CategoryDTOId = new Guid("c3a70938-9e88-437d-a801-c166d2716341"),
                            Description = "Fanta",
                            ImageFileName = "fanta.png",
                            IsDeleted = false,
                            Name = "Fanta",
                            OutOfStock = false,
                            Price = 4.99m
                        },
                        new
                        {
                            Id = new Guid("8620cf54-0d37-4aa1-832a-eb98e9b36863"),
                            CategoryDTOId = new Guid("c3a70938-9e88-437d-a801-c166d2716341"),
                            Description = "Sprite",
                            ImageFileName = "sprite.png",
                            IsDeleted = false,
                            Name = "Sprite",
                            OutOfStock = false,
                            Price = 4.99m
                        },
                        new
                        {
                            Id = new Guid("de797d9f-c473-4bed-a560-e7036ca10ab1"),
                            CategoryDTOId = new Guid("ec2fb26d-99a4-4eab-aa5c-7dd18d88a025"),
                            Description = "Milk Shake de Morango",
                            ImageFileName = "milk-shake-morango.png",
                            IsDeleted = false,
                            Name = "Milk Shake de Morango",
                            OutOfStock = false,
                            Price = 7.99m
                        },
                        new
                        {
                            Id = new Guid("113daae6-f21f-4d38-a778-9364ac64f909"),
                            CategoryDTOId = new Guid("ec2fb26d-99a4-4eab-aa5c-7dd18d88a025"),
                            Description = "Milk Shake de Chocolate",
                            ImageFileName = "milk-shake-chocolate.png",
                            IsDeleted = false,
                            Name = "Milk Shake de Chocolate",
                            OutOfStock = false,
                            Price = 7.99m
                        },
                        new
                        {
                            Id = new Guid("2665c2ec-c537-4d95-9a0f-791bcd4cc938"),
                            CategoryDTOId = new Guid("ec2fb26d-99a4-4eab-aa5c-7dd18d88a025"),
                            Description = "Milk Shake de Baunilha",
                            ImageFileName = "milk-shake-baunilha.png",
                            IsDeleted = false,
                            Name = "Milk Shake de Baunilha",
                            OutOfStock = false,
                            Price = 7.99m
                        });
                });

            modelBuilder.Entity("TechFood.Common.Entities.UserDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa09f3a0-f22d-40a8-9cca-0c64e5ed50e4"),
                            IsDeleted = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEKs0I0Zk5QKKieJTm20PwvTmpkSfnp5BhSl5E35ny8DqffCJA+CiDRnnKRCeOx8+mg==",
                            Role = "admin",
                            Username = "john.admin"
                        });
                });

            modelBuilder.Entity("TechFood.Common.DTO.CustomerDTO", b =>
                {
                    b.OwnsOne("TechFood.Common.DTO.ValueObjects.EmailDTO", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerDTOId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("varchar(255)")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("CustomerDTOId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDTOId");

                            b1.HasData(
                                new
                                {
                                    CustomerDTOId = new Guid("25b58f54-63bc-42da-8cf6-8162097e72c8"),
                                    Address = "john.dev@gmail.com"
                                },
                                new
                                {
                                    CustomerDTOId = new Guid("9887b301-605f-46a6-93db-ac1ce8685723"),
                                    Address = "john.silva@gmail.com"
                                });
                        });

                    b.OwnsOne("TechFood.Common.DTO.ValueObjects.NameDTO", "Name", b1 =>
                        {
                            b1.Property<Guid>("CustomerDTOId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("varchar(255)")
                                .HasColumnName("NameFullName");

                            b1.HasKey("CustomerDTOId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDTOId");

                            b1.HasData(
                                new
                                {
                                    CustomerDTOId = new Guid("25b58f54-63bc-42da-8cf6-8162097e72c8"),
                                    FullName = "John"
                                },
                                new
                                {
                                    CustomerDTOId = new Guid("9887b301-605f-46a6-93db-ac1ce8685723"),
                                    FullName = "John Silva"
                                });
                        });

                    b.OwnsOne("TechFood.Common.DTO.ValueObjects.DocumentDTO", "Document", b1 =>
                        {
                            b1.Property<Guid>("CustomerDTOId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Type")
                                .HasColumnType("int")
                                .HasColumnName("DocumentType");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("DocumentValue");

                            b1.HasKey("CustomerDTOId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDTOId");

                            b1.HasData(
                                new
                                {
                                    CustomerDTOId = new Guid("25b58f54-63bc-42da-8cf6-8162097e72c8"),
                                    Type = 0,
                                    Value = "4511554544"
                                },
                                new
                                {
                                    CustomerDTOId = new Guid("9887b301-605f-46a6-93db-ac1ce8685723"),
                                    Type = 0,
                                    Value = "000000000191"
                                });
                        });

                    b.OwnsOne("TechFood.Domain.ValueObjects.PhoneDTO", "Phone", b1 =>
                        {
                            b1.Property<Guid>("CustomerDTOId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("varchar(5)")
                                .HasColumnName("PhoneCountryCode");

                            b1.Property<string>("DDD")
                                .IsRequired()
                                .HasMaxLength(4)
                                .HasColumnType("varchar(4)")
                                .HasColumnName("PhoneDDD");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar(15)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("CustomerDTOId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDTOId");

                            b1.HasData(
                                new
                                {
                                    CustomerDTOId = new Guid("25b58f54-63bc-42da-8cf6-8162097e72c8"),
                                    CountryCode = "55",
                                    DDD = "11",
                                    Number = "9415452222"
                                },
                                new
                                {
                                    CustomerDTOId = new Guid("9887b301-605f-46a6-93db-ac1ce8685723"),
                                    CountryCode = "55",
                                    DDD = "11",
                                    Number = "9415452222"
                                });
                        });

                    b.Navigation("Document")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("TechFood.Common.Entities.OrderDTO", b =>
                {
                    b.HasOne("TechFood.Common.DTO.CustomerDTO", null)
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("TechFood.Common.Entities.OrderHistoryDTO", b =>
                {
                    b.HasOne("TechFood.Common.Entities.OrderDTO", null)
                        .WithMany("Historical")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechFood.Common.Entities.OrderItemDTO", b =>
                {
                    b.HasOne("TechFood.Common.Entities.OrderDTO", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechFood.Common.Entities.ProductDTO", null)
                        .WithMany()
                        .HasForeignKey("ProductDTOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TechFood.Common.Entities.ProductDTO", b =>
                {
                    b.HasOne("TechFood.Common.DTO.CategoryDTO", null)
                        .WithMany()
                        .HasForeignKey("CategoryDTOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechFood.Common.Entities.UserDTO", b =>
                {
                    b.OwnsOne("TechFood.Common.DTO.ValueObjects.EmailDTO", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserDTOId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("varchar(255)")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("UserDTOId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserDTOId");

                            b1.HasData(
                                new
                                {
                                    UserDTOId = new Guid("fa09f3a0-f22d-40a8-9cca-0c64e5ed50e4"),
                                    Address = "john.admin@techfood.com"
                                });
                        });

                    b.OwnsOne("TechFood.Common.DTO.ValueObjects.NameDTO", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserDTOId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("varchar(255)")
                                .HasColumnName("NameFullName");

                            b1.HasKey("UserDTOId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserDTOId");

                            b1.HasData(
                                new
                                {
                                    UserDTOId = new Guid("fa09f3a0-f22d-40a8-9cca-0c64e5ed50e4"),
                                    FullName = "John Admin"
                                });
                        });

                    b.Navigation("Email");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("TechFood.Common.Entities.OrderDTO", b =>
                {
                    b.Navigation("Historical");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
